<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ma.rest.mapper.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.ma.rest.pojo.Reply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="reply_type" property="replyType" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
    <result column="to_uid" property="toUid" jdbcType="INTEGER" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <insert id="insert" parameterType="com.ma.rest.pojo.Reply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ma_reply (id, comment_id, reply_id, 
      reply_type, content, from_uid, 
      to_uid, reply_time)
    values (#{id,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}, 
      #{replyType,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{fromUid,jdbcType=INTEGER}, 
      #{toUid,jdbcType=INTEGER}, #{replyTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.ma.rest.pojo.Reply" >
    insert into ma_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="replyType != null" >
        reply_type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="fromUid != null" >
        from_uid,
      </if>
      <if test="toUid != null" >
        to_uid,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="goodsStar != null">
        goods_star,
      </if>
      <if test="serviceStar != null">
        service_star,
      </if>

      <if test="matchStar != null">
        match_star,
      </if>
      <if test="commentImg != null">
        comment_img,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="replyType != null" >
        #{replyType,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsStar != null">
        #{goodsStar,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceStar != null">
        #{serviceStar,jdbcType=TIMESTAMP},
      </if>

      <if test="matchStar != null">
        #{matchStar,jdbcType=TIMESTAMP},
      </if>
      <if test="commentImg != null">
        #{commentImg,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="queryReplyByCid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT reply.id id,
    reply.comment_id comment_id,
    reply.reply_id reply_id,
    reply.reply_type reply_type,
    reply.content content,
    reply.from_uid from_uid,
    reply.to_uid to_uid,
    reply.reply_time
     FROM ma_comment comment
    LEFT JOIN ma_reply reply
    ON comment.id= reply.comment_id
    WHERE `comment`.id=#{id}
  </select>


</mapper>